/* tslint:disable */
/* eslint-disable */
/**
 * Bodoge API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Card } from './Card';
import {
    CardFromJSON,
    CardFromJSONTyped,
    CardToJSON,
    CardToJSONTyped,
} from './Card';

/**
 * 
 * @export
 * @interface CardPool
 */
export interface CardPool {
    /**
     * The pool of available cards that players can draw from.
     * @type {Array<Card>}
     * @memberof CardPool
     */
    cards?: Array<Card>;
    /**
     * this tells only the length of the pool, not the cards in it.
     * @type {number}
     * @memberof CardPool
     */
    amount: number;
}

/**
 * Check if a given object implements the CardPool interface.
 */
export function instanceOfCardPool(value: object): value is CardPool {
    if (!('amount' in value) || value['amount'] === undefined) return false;
    return true;
}

export function CardPoolFromJSON(json: any): CardPool {
    return CardPoolFromJSONTyped(json, false);
}

export function CardPoolFromJSONTyped(json: any, ignoreDiscriminator: boolean): CardPool {
    if (json == null) {
        return json;
    }
    return {
        
        'cards': json['cards'] == null ? undefined : ((json['cards'] as Array<any>).map(CardFromJSON)),
        'amount': json['amount'],
    };
}

  export function CardPoolToJSON(json: any): CardPool {
      return CardPoolToJSONTyped(json, false);
  }

  export function CardPoolToJSONTyped(value?: CardPool | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'cards': value['cards'] == null ? undefined : ((value['cards'] as Array<any>).map(CardToJSON)),
        'amount': value['amount'],
    };
}

