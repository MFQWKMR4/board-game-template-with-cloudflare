/* tslint:disable */
/* eslint-disable */
/**
 * Bodoge API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Destination } from './Destination';
import {
    DestinationFromJSON,
    DestinationFromJSONTyped,
    DestinationToJSON,
    DestinationToJSONTyped,
} from './Destination';
import type { Card } from './Card';
import {
    CardFromJSON,
    CardFromJSONTyped,
    CardToJSON,
    CardToJSONTyped,
} from './Card';

/**
 * 
 * @export
 * @interface WsPlayCard
 */
export interface WsPlayCard {
    /**
     * 
     * @type {string}
     * @memberof WsPlayCard
     */
    playerId: string;
    /**
     * 
     * @type {Array<Card>}
     * @memberof WsPlayCard
     */
    cards: Array<Card>;
    /**
     * 
     * @type {Destination}
     * @memberof WsPlayCard
     */
    destination: Destination;
}



/**
 * Check if a given object implements the WsPlayCard interface.
 */
export function instanceOfWsPlayCard(value: object): value is WsPlayCard {
    if (!('playerId' in value) || value['playerId'] === undefined) return false;
    if (!('cards' in value) || value['cards'] === undefined) return false;
    if (!('destination' in value) || value['destination'] === undefined) return false;
    return true;
}

export function WsPlayCardFromJSON(json: any): WsPlayCard {
    return WsPlayCardFromJSONTyped(json, false);
}

export function WsPlayCardFromJSONTyped(json: any, ignoreDiscriminator: boolean): WsPlayCard {
    if (json == null) {
        return json;
    }
    return {
        
        'playerId': json['playerId'],
        'cards': ((json['cards'] as Array<any>).map(CardFromJSON)),
        'destination': DestinationFromJSON(json['destination']),
    };
}

  export function WsPlayCardToJSON(json: any): WsPlayCard {
      return WsPlayCardToJSONTyped(json, false);
  }

  export function WsPlayCardToJSONTyped(value?: WsPlayCard | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'playerId': value['playerId'],
        'cards': ((value['cards'] as Array<any>).map(CardToJSON)),
        'destination': DestinationToJSON(value['destination']),
    };
}

