/* tslint:disable */
/* eslint-disable */
/**
 * Bodoge API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Field } from './Field';
import {
    FieldFromJSON,
    FieldFromJSONTyped,
    FieldToJSON,
    FieldToJSONTyped,
} from './Field';
import type { CardQueue } from './CardQueue';
import {
    CardQueueFromJSON,
    CardQueueFromJSONTyped,
    CardQueueToJSON,
    CardQueueToJSONTyped,
} from './CardQueue';
import type { CardPool } from './CardPool';
import {
    CardPoolFromJSON,
    CardPoolFromJSONTyped,
    CardPoolToJSON,
    CardPoolToJSONTyped,
} from './CardPool';

/**
 * 
 * @export
 * @interface Environment
 */
export interface Environment {
    /**
     * 
     * @type {Field}
     * @memberof Environment
     */
    field: Field;
    /**
     * 
     * @type {CardPool}
     * @memberof Environment
     */
    cardPool: CardPool;
    /**
     * 
     * @type {CardQueue}
     * @memberof Environment
     */
    cardQueue: CardQueue;
}

/**
 * Check if a given object implements the Environment interface.
 */
export function instanceOfEnvironment(value: object): value is Environment {
    if (!('field' in value) || value['field'] === undefined) return false;
    if (!('cardPool' in value) || value['cardPool'] === undefined) return false;
    if (!('cardQueue' in value) || value['cardQueue'] === undefined) return false;
    return true;
}

export function EnvironmentFromJSON(json: any): Environment {
    return EnvironmentFromJSONTyped(json, false);
}

export function EnvironmentFromJSONTyped(json: any, ignoreDiscriminator: boolean): Environment {
    if (json == null) {
        return json;
    }
    return {
        
        'field': FieldFromJSON(json['field']),
        'cardPool': CardPoolFromJSON(json['cardPool']),
        'cardQueue': CardQueueFromJSON(json['cardQueue']),
    };
}

  export function EnvironmentToJSON(json: any): Environment {
      return EnvironmentToJSONTyped(json, false);
  }

  export function EnvironmentToJSONTyped(value?: Environment | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'field': FieldToJSON(value['field']),
        'cardPool': CardPoolToJSON(value['cardPool']),
        'cardQueue': CardQueueToJSON(value['cardQueue']),
    };
}

